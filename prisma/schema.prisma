// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

// model Organization {
//   id            String     @id @default(cuid())  @unique
//   name          String
//   patients      Patient[]
//   medicalProfessionals      User[]
//   createdAt       DateTime    @default(now())
// }

model User {
    id            String    @id @default(cuid())
    // organizationId String
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

  // organization Organization  @relation(fields: [organizationId], references: [id])
  // @@index([organizationId])
}

// model Patient {
//   id            String    @id @default(cuid())    @unique
  // organizationId  String
  // medicalProfessionalId   String
  // firstName          String
  // lastName        String
  // disease        String
  // mentalHealth       String
  // drugs        String
  // procedures        String
  // anatomy        String
  // other      String
  // documents   Document[]
  // createdAt       DateTime @default(now())
  // updatedAt      DateTime @updatedAt

  // organization Organization @relation(fields: [organizationId], references: [id])
  // @@index([organizationId])
// }

// model Document {
//   id            String    @id @default(cuid())    @unique
//   title     String
//   authorId      String
//   patientId    String   
//   createdAt      DateTime @default(now())
//   updatedAt       DateTime @updatedAt

//   patient Patient @relation(fields: [patientId], references: [id])
//   @@index([patientId])
// }